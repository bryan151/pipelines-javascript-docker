# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5d00a46a-50b4-4828-a6f6-1ba5ccabc20e'
  imageRepository: 'nodeapp'
  containerRegistry: 'jalabootcampcontainer01.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'jalabootcampcontainer01ee0a-auth'
  azureSubscriptionEndpoint: 'Azure para estudiantes'
  azureResourceGroup: 'jalabootcamp-bs-11'
  kubernetesCluster: 'multinode'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Dev
  displayName: Dev stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'bryan151pipelinesjavascriptdocker.dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: |
              ls -l
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: HelmDeploy@0
            displayName: Helm install
            inputs:
              # azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
              # azureResourceGroup: $(azureResourceGroup)
              # kubernetesCluster: $(kubernetesCluster)
              command: install
              chartType: FilePath
              chartPath: $(Pipeline.Workspace)/charts/sampleapp
            
- stage: Test
  displayName: Test stage
  dependsOn: Dev

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'bryan151pipelinesjavascriptdocker.qa'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

